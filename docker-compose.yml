version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  backend:
    build: ./backend
    container_name: fastapi_app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      ISOLATE_SERVICE_URL: ${ISOLATE_SERVICE_URL}
      FRONTEND_URL: ${FRONTEND_URL}
    depends_on:
      - db
      - isolate-service
    networks:
      - mynetwork

  isolate-service:
    build:
      context: ./isolate-service
      dockerfile: Dockerfile
    container_name: isolate_service
    ports:
      - "8001:8001"
    privileged: true
    cap_add:
      - SYS_ADMIN
    volumes:
      - isolate-boxes:/var/local/lib/isolate
      - isolate-locks:/run/isolate/locks
      - isolate-cgroup:/run/isolate/cgroup
      - ./isolate-service:/app
    networks:
      - mynetwork

  frontend:
    build: ./frontend
    container_name: frontend_app
    ports:
      - "3000:3000" 
    environment:
      - API_URL=http://backend:8000 
    depends_on:
      - backend
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data:
  isolate-boxes:
  isolate-locks:
  isolate-cgroup: